<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njau.repo.mapper.CarportMapper">
    <resultMap id="BaseResultMap" type="com.njau.repo.pojo.CarportDO">
        <id column="zone_id" jdbcType="VARCHAR" property="zoneId"/>
        <id column="carport_id" jdbcType="INTEGER" property="carportId"/>
        <result column="buyTime" jdbcType="TIMESTAMP" property="buytime"/>
        <result column="room_zone" jdbcType="INTEGER" property="roomZone"/>
        <result column="room_id" jdbcType="VARCHAR" property="roomId"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
    </resultMap>
    <resultMap id="BaseResultVoMap" type="com.njau.domain.vo.CarportVO">
        <id column="zone_id" jdbcType="VARCHAR" property="zoneId"/>
        <id column="carport_id" jdbcType="INTEGER" property="carportId"/>
        <result column="buyTime" jdbcType="TIMESTAMP" property="buytime"/>
        <result column="room_zone" jdbcType="INTEGER" property="roomZone"/>
        <result column="room_id" jdbcType="VARCHAR" property="roomId"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="price" jdbcType="INTEGER" property="price"/>
        <result column="username" jdbcType="VARCHAR" property="userName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
    <sql id="Base_Column_List">
        zone_id, carport_id, buyTime, room_zone, room_id, `state`, price
    </sql>
    <select id="selectByExample" parameterType="com.njau.repo.pojo.CarportExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from carport
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="com.njau.repo.pojo.CarportDOKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from carport
        where zone_id = #{zoneId,jdbcType=VARCHAR}
        and carport_id = #{carportId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.njau.repo.pojo.CarportDOKey">
        delete
        from carport
        where zone_id = #{zoneId,jdbcType=VARCHAR}
          and carport_id = #{carportId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.njau.repo.pojo.CarportExample">
        delete from carport
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.njau.repo.pojo.CarportDO">
        insert into carport (zone_id, carport_id, buyTime,
                             room_zone, room_id, `state`,
                             price)
        values (#{zoneId,jdbcType=VARCHAR}, #{carportId,jdbcType=INTEGER}, #{buytime,jdbcType=TIMESTAMP},
                #{roomZone,jdbcType=INTEGER}, #{roomId,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT},
                #{price,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.njau.repo.pojo.CarportDO">
        insert into carport
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="zoneId != null">
                zone_id,
            </if>
            <if test="carportId != null">
                carport_id,
            </if>
            <if test="buytime != null">
                buyTime,
            </if>
            <if test="roomZone != null">
                room_zone,
            </if>
            <if test="roomId != null">
                room_id,
            </if>
            <if test="state != null">
                `state`,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="zoneId != null">
                #{zoneId,jdbcType=VARCHAR},
            </if>
            <if test="carportId != null">
                #{carportId,jdbcType=INTEGER},
            </if>
            <if test="buytime != null">
                #{buytime,jdbcType=TIMESTAMP},
            </if>
            <if test="roomZone != null">
                #{roomZone,jdbcType=INTEGER},
            </if>
            <if test="roomId != null">
                #{roomId,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                #{price,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.njau.repo.pojo.CarportExample" resultType="java.lang.Long">
        select count(*) from carport
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update carport
        <set>
            <if test="record.zoneId != null">
                zone_id = #{record.zoneId,jdbcType=VARCHAR},
            </if>
            <if test="record.carportId != null">
                carport_id = #{record.carportId,jdbcType=INTEGER},
            </if>
            <if test="record.buytime != null">
                buyTime = #{record.buytime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.roomZone != null">
                room_zone = #{record.roomZone,jdbcType=INTEGER},
            </if>
            <if test="record.roomId != null">
                room_id = #{record.roomId,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                `state` = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update carport
        set zone_id = #{record.zoneId,jdbcType=VARCHAR},
        carport_id = #{record.carportId,jdbcType=INTEGER},
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
        room_zone = #{record.roomZone,jdbcType=INTEGER},
        room_id = #{record.roomId,jdbcType=VARCHAR},
        `state` = #{record.state,jdbcType=TINYINT},
        price = #{record.price,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.njau.repo.pojo.CarportDO">
        update carport
        <set>
            <if test="buytime != null">
                buyTime = #{buytime,jdbcType=TIMESTAMP},
            </if>
            <if test="roomZone != null">
                room_zone = #{roomZone,jdbcType=INTEGER},
            </if>
            <if test="roomId != null">
                room_id = #{roomId,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                `state` = #{state,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=INTEGER},
            </if>
        </set>
        where zone_id = #{zoneId,jdbcType=VARCHAR}
        and carport_id = #{carportId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.njau.repo.pojo.CarportDO">
        update carport
        set buyTime   = #{buytime,jdbcType=TIMESTAMP},
            room_zone = #{roomZone,jdbcType=INTEGER},
            room_id   = #{roomId,jdbcType=VARCHAR},
            `state`   = #{state,jdbcType=TINYINT},
            price     = #{price,jdbcType=INTEGER}
        where zone_id = #{zoneId,jdbcType=VARCHAR}
          and carport_id = #{carportId,jdbcType=INTEGER}
    </update>

    <select id="findCarportByZoneByState" resultMap="BaseResultVoMap">
        SELECT
        carport.*,`user`.`name`
        FROM
        carport
        LEFT JOIN room ON carport.room_id = room.id AND carport.room_zone = room.zone
        LEFT JOIN `user` ON `user`.username = room.username
        <where>
            <if test="state != null">
                AND carport.`state` = #{state,jdbcType=TINYINT}
            </if>
            <if test="zoneId != null">
                AND carport.zone_id = #{zoneId,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>