<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njau.repo.mapper.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.njau.repo.pojo.NoticeDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="staff_username" jdbcType="VARCHAR" property="staffUsername"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="zone" jdbcType="INTEGER" property="zone"/>
        <result column="room_id" jdbcType="VARCHAR" property="roomId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, content, `time`, staff_username, `status`, `zone`, room_id
    </sql>
    <select id="selectByExample" parameterType="com.njau.repo.pojo.NoticeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from notice
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from notice
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.njau.repo.pojo.NoticeExample">
        delete from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.njau.repo.pojo.NoticeDO">
        insert into notice (id, content, `time`,
                            staff_username, `status`, `zone`,
                            room_id)
        values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
                #{staffUsername,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{zone,jdbcType=INTEGER},
                #{roomId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.njau.repo.pojo.NoticeDO">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="time != null">
                `time`,
            </if>
            <if test="staffUsername != null">
                staff_username,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="zone != null">
                `zone`,
            </if>
            <if test="roomId != null">
                room_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="staffUsername != null">
                #{staffUsername,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="zone != null">
                #{zone,jdbcType=INTEGER},
            </if>
            <if test="roomId != null">
                #{roomId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.njau.repo.pojo.NoticeExample" resultType="java.lang.Long">
        select count(*) from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update notice
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                `time` = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.staffUsername != null">
                staff_username = #{record.staffUsername,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                `status` = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.zone != null">
                `zone` = #{record.zone,jdbcType=INTEGER},
            </if>
            <if test="record.roomId != null">
                room_id = #{record.roomId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update notice
        set id = #{record.id,jdbcType=INTEGER},
        content = #{record.content,jdbcType=VARCHAR},
        `time` = #{record.time,jdbcType=TIMESTAMP},
        staff_username = #{record.staffUsername,jdbcType=VARCHAR},
        `status` = #{record.status,jdbcType=VARCHAR},
        `zone` = #{record.zone,jdbcType=INTEGER},
        room_id = #{record.roomId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.njau.repo.pojo.NoticeDO">
        update notice
        <set>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                `time` = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="staffUsername != null">
                staff_username = #{staffUsername,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="zone != null">
                `zone` = #{zone,jdbcType=INTEGER},
            </if>
            <if test="roomId != null">
                room_id = #{roomId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.njau.repo.pojo.NoticeDO">
        update notice
        set content        = #{content,jdbcType=VARCHAR},
            `time`         = #{time,jdbcType=TIMESTAMP},
            staff_username = #{staffUsername,jdbcType=VARCHAR},
            `status`       = #{status,jdbcType=VARCHAR},
            `zone`         = #{zone,jdbcType=INTEGER},
            room_id        = #{roomId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>