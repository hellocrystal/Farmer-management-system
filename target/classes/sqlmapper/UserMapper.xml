<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njau.repo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.njau.repo.pojo.UserDO">
        <id column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="age" jdbcType="TINYINT" property="age"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="idcard" jdbcType="CHAR" property="idcard"/>
        <result column="regist_time" jdbcType="TIMESTAMP" property="registTime"/>
    </resultMap>
    <resultMap id="RoomUserVOMap" type="com.njau.domain.vo.RoomUserVO">
        <id column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="CHAR" property="sex"/>
        <result column="age" jdbcType="TINYINT" property="age"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <result column="idcard" jdbcType="CHAR" property="idcard"/>
        <result column="regist_time" jdbcType="TIMESTAMP" property="registTime"/>
        <result column="roomId" jdbcType="VARCHAR" property="roomId"/>
        <result column="zone" jdbcType="INTEGER" property="zone"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        username, `password`, `name`, sex, age, phone, idcard, regist_time
    </sql>
    <select id="selectByExample" parameterType="com.njau.repo.pojo.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from user
        where username = #{username,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.njau.repo.pojo.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.njau.repo.pojo.UserDO">
        insert into user (username, `password`, `name`,
                          sex, age, phone, idcard,
                          regist_time)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{sex,jdbcType=CHAR}, #{age,jdbcType=TINYINT}, #{phone,jdbcType=CHAR}, #{idcard,jdbcType=CHAR},
                #{registTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.njau.repo.pojo.UserDO">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="registTime != null">
                regist_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=CHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=TINYINT},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=CHAR},
            </if>
            <if test="registTime != null">
                #{registTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.njau.repo.pojo.UserExample" resultType="java.lang.Long">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                `password` = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.age != null">
                age = #{record.age,jdbcType=TINYINT},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=CHAR},
            </if>
            <if test="record.idcard != null">
                idcard = #{record.idcard,jdbcType=CHAR},
            </if>
            <if test="record.registTime != null">
                regist_time = #{record.registTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set username = #{record.username,jdbcType=VARCHAR},
        `password` = #{record.password,jdbcType=VARCHAR},
        `name` = #{record.name,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=CHAR},
        age = #{record.age,jdbcType=TINYINT},
        phone = #{record.phone,jdbcType=CHAR},
        idcard = #{record.idcard,jdbcType=CHAR},
        regist_time = #{record.registTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.njau.repo.pojo.UserDO">
        update user
        <set>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=TINYINT},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=CHAR},
            </if>
            <if test="registTime != null">
                regist_time = #{registTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where username = #{username,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.njau.repo.pojo.UserDO">
        update user
        set `password`  = #{password,jdbcType=VARCHAR},
            `name`      = #{name,jdbcType=VARCHAR},
            sex         = #{sex,jdbcType=CHAR},
            age         = #{age,jdbcType=TINYINT},
            phone       = #{phone,jdbcType=CHAR},
            idcard      = #{idcard,jdbcType=CHAR},
            regist_time = #{registTime,jdbcType=TIMESTAMP}
        where username = #{username,jdbcType=VARCHAR}
    </update>


    <resultMap id="userBillVoResultMap" type="com.njau.domain.vo.UserBillVO">
        <id column="username" jdbcType="VARCHAR" property="username"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="CHAR" property="phone"/>
        <collection property="bill" ofType="com.njau.domain.vo.BillVO">
            <id property="id" column="fee_id" jdbcType="INTEGER"/>
            <result property="name" column="fee_name" jdbcType="VARCHAR"/>
            <result property="money" column="money" jdbcType="INTEGER"/>
            <result property="time" column="time" jdbcType="DATE"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <select id="unpayfy" resultMap="userBillVoResultMap">
        SELECT
            `user`.username,
            `user`.`name`,
            `user`.phone,
            fee.id AS fee_id,
            fee_item.`name` as fee_name,
            fee_item.money,
            fee.time,
            IF(fee.`state`=0, '未支付' ,'已支付') AS status
        FROM
            `user`
                LEFT JOIN room ON room.username = `user`.username
                LEFT JOIN fee ON fee.room_id = room.id AND fee.zone = room.zone
                LEFT JOIN fee_item ON fee.fee_item_id = fee_item.id
        WHERE fee.id IS NOT NULL AND fee.state = 0
    </select>

    <select id="findByZone" resultMap="RoomUserVOMap">
        SELECT

            `user`.	* ,room.id AS roomId,room.zone AS zone
        FROM
            `user`
                LEFT JOIN staff ON staff.username = `user`.username
                LEFT JOIN room ON room.username = `user`.username
        <where>
            staff.username IS NULL
            <if test="zone != null">
                AND room.`zone` = #{zone,jdbcType=INTEGER}
            </if>
        </where>
    </select>


</mapper>